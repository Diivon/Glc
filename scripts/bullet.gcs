variables:
	public: 
		//your public variables here
		float speed;
		float lifeTime;
	private: 
		float _ttl;
		//your private variables here
		bool _isActive;
		gc::Vec2 _dir;
methods:
	void onStart(){
		//it's called once, before game cycle begins
		self.isVisible = false;
	}
	void onUpdate(const float & dt){
		//onUpdate called once per frame
		if (_isActive){
			self.moveOn(_dir * speed);
			_ttl += dt;
		}
		if (_ttl > lifeTime){
			_isActive = false;
			_ttl = 0.0f;
		}
		scene.getLayer<EnemyLayer>().foreach([this](auto & i){
			if (i.collider.isCollide(self.collider))
				i.isVisible = false;
		});
	}
	void start(gc::Vec2 const & pos, gc::Vec2 const & dir){
		if(_isActive) return;
		
		self.isVisible = true;
		self.moveTo(pos);
		_isActive = true;
		_dir = dir;
		gc::debug.log("Shoot!");
	}

	//else methods here
constructors:
	//this code will be in class constructor-specific synthax example is: 
	//str("awd"), dur(6)
	_ttl(0.0f), _isActive(false), speed(5.0f), lifeTime(0.0f)
constructor_body:
	//this code will be runned when constructor of object will be called
	//use it for primary initialization only!!!
