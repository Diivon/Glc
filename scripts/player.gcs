variables:
	public: 
	//your public variables here
	private:
		gc::Vec2 _lookvec;
		const float _rotateGrade = 5.0f;
		const float _speed = 5.0f;
		bool _isFirstWeapon = true;
	//your private variables here
methods:
	void onStart(){
	//it's called once, before game cycle begins
		scene.getRenderer().getCamera().followSpeed = 0.2;
	}
	void shoot(gc::Vec2 const & dir){
		if (_isFirstWeapon){
			layer.getObject<Bullet>().start(self.getCenter(), dir);
			layer.getObject<Bullet>().speed = 50.0f;
			layer.getObject<Bullet>().lifeTime = 1000.0f;
		}
		else{
			layer.getObject<Bullet>().start(self.getCenter(), dir.getRotated(sh::degree(gc::Random<float>::get(-50, 50))));
			layer.getObject<Bullet>().speed = 250.0f;
			layer.getObject<Bullet>().lifeTime = 100.0f;
		}
	}
	void onUpdate(const float & dt){
	//onUpdate called once per frame
		if (gc::Mouse::isButtonPressed(gc::Mouse::Button::Left))
			self.shoot(_lookvec);
		
		_lookvec = (gc::Mouse::getWorldPosition() - self.getCenter()).normalize();
		auto deg = gc::toDegree(acos(-_lookvec.y));
		if (_lookvec.x < 0)	deg.value *= -1;
		self.getGraphicalComponent().setRotation(deg);
		
		//forward
		if (gc::Keyboard::isKeyPressed(gc::Keyboard::Key::W))
			self.moveOn(gc::Vec2::up * _speed);
		//backward
		if (gc::Keyboard::isKeyPressed(gc::Keyboard::Key::S))
			self.moveOn(gc::Vec2::down * _speed);
		//right strafe
		if (gc::Keyboard::isKeyPressed(gc::Keyboard::Key::D))
			self.moveOn(gc::Vec2::right * _speed);
		//left strafe
		if (gc::Keyboard::isKeyPressed(gc::Keyboard::Key::A))
			self.moveOn(gc::Vec2::left * _speed);

		if (gc::Keyboard::isKeyPressed(gc::Keyboard::Key::Num1)){
			self._isFirstWeapon = true;
		}
		if (gc::Keyboard::isKeyPressed(gc::Keyboard::Key::Num2)){
			self._isFirstWeapon = false;
		}

		//scene.getRenderer().getCamera().follow(self.getCenter());
		scene.getRenderer().getCamera().moveTo( (self.getCenter() + (_lookvec * _speed * 20)) );
	}
	//else methods here
constructors:
	//this code will be in class constructor-specific synthax example is:
	//str("awd"), dur(6)
	_lookvec(0, -1)
constructor_body:
	//this code will be runned when constructor of object will be called
	//use it for primary initialization only!!!
